{"version":3,"sources":["Goods.tsx","App.tsx","helper.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectedGoods","setGoodSelected","good","setState","resetGoodSelection","addGoodsSelected","prevState","removeGoodsSelection","newSelected","filter","selected","resetGoodsSelection","this","goodsTitle","goods","length","titlePart","lastElemIndex","i","getGoodsTitle","className","type","onClick","map","isSelected","find","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAAaA,G,MAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCAIC,E,4MACJC,MAAQ,CACNC,aAAc,MACdC,cAAe,CAAC,Q,EAGlBC,gBAAkB,SAACC,GAAD,OAAkB,EAAKC,SAAS,CAAEJ,aAAcG,K,EAElEE,mBAAqB,kBAAM,EAAKD,SAAS,CAAEJ,aAAc,M,EAEzDM,iBAAmB,SAACH,GAAD,OAAkB,EAAKC,UACxC,SAAAG,GAAS,MAAK,CAAEN,cAAc,GAAD,mBAAMM,EAAUN,eAAhB,CAA+BE,S,EAG9DK,qBAAuB,SAACL,GACtB,IAEMM,EAFoB,EAAKV,MAAvBE,cAE0BS,QAAO,SAAAC,GAAQ,OAAIA,IAAaR,KAElE,EAAKC,SAAS,CAAEH,cAAeQ,K,EAGjCG,oBAAsB,kBAAM,EAAKR,SAAS,CAAEH,cAAe,M,4CAE3D,WAAU,IAAD,OACP,EAAwCY,KAAKd,MAArCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAChBa,ECpCmB,SAACC,GAC5B,GAAqB,IAAjBA,EAAMC,OACR,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBAGF,GAAqB,IAAjBA,EAAMC,OACR,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBAA0BA,EAAM,GAAhC,iBAGF,GAAIA,EAAMC,OAAS,EAAG,CAIpB,IAHA,IAAIC,EAAY,GACVC,EAAgBH,EAAMC,OAAS,EAE5BG,EAAI,EAAGA,EAAID,EAAeC,GAAK,EAEpCF,GADEE,IAAMD,EAAgB,EACf,UAAOH,EAAMI,GAAb,MAEIJ,EAAMI,GAIvB,MAAM,GAAN,OAAUF,EAAV,gBAA2BF,EAAMG,GAAjC,iBAGF,MAAO,oBDYcE,CAAcnB,GAEjC,OACE,sBAAKoB,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,0BAASA,UAAU,SAAnB,UACE,6BAAKrB,EAAagB,OAAb,UAAyBhB,EAAzB,gBAAsD,sBAC1DA,GACC,wBACEqB,UAAU,uBACVC,KAAK,SACLC,QAASV,KAAKR,mBAHhB,kBAUJ,oBAAIgB,UAAU,OAAd,SACGxB,EAAgB2B,KAAI,SAACrB,GAAD,OACnB,qBAAekB,UAAU,aAAzB,UACE,qBAAKA,UAAWrB,IAAiBG,EAAO,oBAAsB,GAA9D,SACGA,IAGFH,IAAiBG,GAChB,wBACEkB,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAM,EAAKrB,gBAAgBC,IAHtC,sBANKA,WAmBf,sBAAKkB,UAAU,YAAf,UACE,0BAASA,UAAU,SAAnB,UACE,oBAAIA,UAAU,gBAAd,SAA+BP,IACL,IAAzBb,EAAce,QACb,wBACEK,UAAU,uBACVC,KAAK,SACLC,QAASV,KAAKD,oBAHhB,kBAUJ,oBAAIS,UAAU,OAAd,SACGxB,EAAgB2B,KAAI,SAACrB,GACpB,IAAMsB,EAAaxB,EAAcyB,MAAK,SAAAf,GAAQ,OAAIA,IAAaR,KAE/D,OACE,qBAAekB,UAAU,aAAzB,UACE,qBAAKA,UAAWI,EAAa,oBAAsB,GAAnD,SACGtB,IAIAsB,EASC,wBACEJ,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAM,EAAKf,qBAAqBL,IAH3C,oBARA,wBACEkB,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAM,EAAKjB,iBAAiBH,IAHvC,mBAPGA,kB,GApFPwB,IAAMC,WAsHT9B,IE7Hf+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3861ec85.chunk.js","sourcesContent":["export const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport './App.scss';\nimport { getGoodsTitle } from './helper';\nimport { goodsFromServer } from './Goods';\n\ninterface State {\n  selectedGood: string;\n  selectedGoods: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n    selectedGoods: ['Jam'],\n  };\n\n  setGoodSelected = (good: string) => this.setState({ selectedGood: good });\n\n  resetGoodSelection = () => this.setState({ selectedGood: '' });\n\n  addGoodsSelected = (good: string) => this.setState(\n    prevState => ({ selectedGoods: [...prevState.selectedGoods, good] }),\n  );\n\n  removeGoodsSelection = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    const newSelected = selectedGoods.filter(selected => selected !== good);\n\n    this.setState({ selectedGoods: newSelected });\n  };\n\n  resetGoodsSelection = () => this.setState({ selectedGoods: [] });\n\n  render() {\n    const { selectedGood, selectedGoods } = this.state;\n    const goodsTitle = getGoodsTitle(selectedGoods);\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <section className=\"header\">\n            <h2>{selectedGood.length ? `${selectedGood} is selected` : 'No goods selected'}</h2>\n            {selectedGood && (\n              <button\n                className=\"button button--close\"\n                type=\"button\"\n                onClick={this.resetGoodSelection}\n              >\n                X\n              </button>\n            )}\n          </section>\n\n          <ul className=\"list\">\n            {goodsFromServer.map((good) => (\n              <li key={good} className=\"list__item\">\n                <div className={selectedGood === good ? 'list__item_active' : ''}>\n                  {good}\n                </div>\n\n                {selectedGood !== good && (\n                  <button\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => this.setGoodSelected(good)}\n                  >\n                    Select\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"container\">\n          <section className=\"header\">\n            <h2 className=\"header__title\">{goodsTitle}</h2>\n            {selectedGoods.length !== 0 && (\n              <button\n                className=\"button button--close\"\n                type=\"button\"\n                onClick={this.resetGoodsSelection}\n              >\n                X\n              </button>\n            )}\n          </section>\n\n          <ul className=\"list\">\n            {goodsFromServer.map((good) => {\n              const isSelected = selectedGoods.find(selected => selected === good);\n\n              return (\n                <li key={good} className=\"list__item\">\n                  <div className={isSelected ? 'list__item_active' : ''}>\n                    {good}\n                  </div>\n\n                  {\n                    !isSelected ? (\n                      <button\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => this.addGoodsSelected(good)}\n                      >\n                        Add\n                      </button>\n                    ) : (\n                      <button\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => this.removeGoodsSelection(good)}\n                      >\n                        Remove\n                      </button>\n                    )\n                  }\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const getGoodsTitle = (goods: string[]): string => {\n  if (goods.length === 1) {\n    return `${goods[0]} is selected`;\n  }\n\n  if (goods.length === 2) {\n    return `${goods[0]} and ${goods[1]} are selected`;\n  }\n\n  if (goods.length > 2) {\n    let titlePart = '';\n    const lastElemIndex = goods.length - 1;\n\n    for (let i = 0; i < lastElemIndex; i += 1) {\n      if (i !== lastElemIndex - 1) {\n        titlePart += `${goods[i]}, `;\n      } else {\n        titlePart += goods[i];\n      }\n    }\n\n    return `${titlePart} and ${goods[lastElemIndex]} are selected`;\n  }\n\n  return 'No goods selected';\n};\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}