{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectedGoods","getGoodsTitle","goods","length","titlePart","lastElemIndex","i","this","goodsTitle","className","type","onClick","setState","map","good","isSeleced","find","selected","newSelected","filter","push","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,aAAc,MACdC,cAAe,CAAC,Q,EAGlBC,cAAgB,SAACC,GACf,GAAqB,IAAjBA,EAAMC,OACR,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBAGF,GAAqB,IAAjBA,EAAMC,OACR,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBAA0BA,EAAM,GAAhC,iBAGF,GAAIA,EAAMC,OAAS,EAAG,CAIpB,IAHA,IAAIC,EAAY,GACVC,EAAgBH,EAAMC,OAAS,EAE5BG,EAAI,EAAGA,EAAID,EAAeC,GAAK,EAEpCF,GADEE,IAAMD,EAAgB,EACf,UAAOH,EAAMI,GAAb,MAEIJ,EAAMI,GAIvB,MAAM,GAAN,OAAUF,EAAV,gBAA2BF,EAAMG,GAAjC,iBAGF,MAAO,qB,4CAGT,WAAU,IAAD,OACP,EAAwCE,KAAKT,MAArCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAChBQ,EAAaD,KAAKN,cAAcD,GAEtC,OACE,sBAAKS,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,0BAASA,UAAU,SAAnB,UACE,6BAAKV,EAAaI,OAAb,UAAyBJ,EAAzB,gBAAsD,sBAC1DA,GACC,wBACEU,UAAU,uBACVC,KAAK,SACLC,QAAS,kBACP,EAAKC,SAAS,CAAEb,aAAc,MAJlC,kBAYJ,oBAAIU,UAAU,OAAd,SACGb,EAAgBiB,KAAI,SAACC,GAAD,OACnB,qBAAeL,UAAU,aAAzB,UACE,qBAAKA,UAAWV,IAAiBe,EAAO,oBAAsB,GAA9D,SACGA,IAGFf,IAAiBe,GAChB,wBACEL,UAAU,SACVC,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEb,aAAce,KAJlC,sBANKA,WAqBf,sBAAKL,UAAU,YAAf,UACE,0BAASA,UAAU,SAAnB,UACE,oBAAIA,UAAU,gBAAd,SAA+BD,IACL,IAAzBR,EAAcG,QACb,wBACEM,UAAU,uBACVC,KAAK,SACLC,QAAS,kBACP,EAAKC,SAAS,CAAEZ,cAAe,MAJnC,kBAYJ,oBAAIS,UAAU,OAAd,SACGb,EAAgBiB,KAAI,SAAAC,GACnB,IAAMC,EAAYf,EAAcgB,MAAK,SAAAC,GAAQ,OAAIA,IAAaH,KAE9D,OACE,qBAAeL,UAAU,aAAzB,UACE,qBAAKA,UAAWM,EAAY,oBAAsB,GAAlD,SACGD,IAIAC,EAYC,wBACEN,UAAU,SACVC,KAAK,SACLC,QAAS,WACP,IAAMO,EAAclB,EAAcmB,QAAO,SAAAF,GAAQ,OAAIA,IAAaH,KAElE,EAAKF,SAAS,CAAEZ,cAAekB,KANnC,oBAXA,wBACET,UAAU,SACVC,KAAK,SACLC,QAAS,WACPX,EAAcoB,KAAKN,GACnB,EAAKF,SAAS,CAAEZ,mBALpB,mBAPGc,kB,GAnGPO,IAAMC,WA4ITzB,ICzJf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9f04c54f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGood: 'Jam',\n    selectedGoods: ['Jam'],\n  };\n\n  getGoodsTitle = (goods: string[]) => {\n    if (goods.length === 1) {\n      return `${goods[0]} is selected`;\n    }\n\n    if (goods.length === 2) {\n      return `${goods[0]} and ${goods[1]} are selected`;\n    }\n\n    if (goods.length > 2) {\n      let titlePart = '';\n      const lastElemIndex = goods.length - 1;\n\n      for (let i = 0; i < lastElemIndex; i += 1) {\n        if (i !== lastElemIndex - 1) {\n          titlePart += `${goods[i]}, `;\n        } else {\n          titlePart += goods[i];\n        }\n      }\n\n      return `${titlePart} and ${goods[lastElemIndex]} are selected`;\n    }\n\n    return 'No goods selected';\n  };\n\n  render() {\n    const { selectedGood, selectedGoods } = this.state;\n    const goodsTitle = this.getGoodsTitle(selectedGoods);\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <section className=\"header\">\n            <h2>{selectedGood.length ? `${selectedGood} is selected` : 'No goods selected'}</h2>\n            {selectedGood && (\n              <button\n                className=\"button button--close\"\n                type=\"button\"\n                onClick={() => (\n                  this.setState({ selectedGood: '' })\n                )}\n              >\n                X\n              </button>\n            )}\n          </section>\n\n          <ul className=\"list\">\n            {goodsFromServer.map((good) => (\n              <li key={good} className=\"list__item\">\n                <div className={selectedGood === good ? 'list__item_active' : ''}>\n                  {good}\n                </div>\n\n                {selectedGood !== good && (\n                  <button\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.setState({ selectedGood: good });\n                    }}\n                  >\n                    Select\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"container\">\n          <section className=\"header\">\n            <h2 className=\"header__title\">{goodsTitle}</h2>\n            {selectedGoods.length !== 0 && (\n              <button\n                className=\"button button--close\"\n                type=\"button\"\n                onClick={() => (\n                  this.setState({ selectedGoods: [] })\n                )}\n              >\n                X\n              </button>\n            )}\n          </section>\n\n          <ul className=\"list\">\n            {goodsFromServer.map(good => {\n              const isSeleced = selectedGoods.find(selected => selected === good);\n\n              return (\n                <li key={good} className=\"list__item\">\n                  <div className={isSeleced ? 'list__item_active' : ''}>\n                    {good}\n                  </div>\n\n                  {\n                    !isSeleced ? (\n                      <button\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => {\n                          selectedGoods.push(good);\n                          this.setState({ selectedGoods });\n                        }}\n                      >\n                        Add\n                      </button>\n                    ) : (\n                      <button\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => {\n                          const newSelected = selectedGoods.filter(selected => selected !== good);\n\n                          this.setState({ selectedGoods: newSelected });\n                        }}\n                      >\n                        Remove\n                      </button>\n                    )\n                  }\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}